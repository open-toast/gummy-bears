version: 2.1

executors:
  builder:
    working_directory: ~/code
    docker:
      - image: cimg/openjdk:17.0
    environment:
      JAVA_OPTS: "-Xmx3200m"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.internal.http.socketTimeout=120000 -Dorg.gradle.internal.network.retry.max.attempts=1 -Dorg.gradle.internal.publish.checksums.insecure=true"

commands:
  read_cache:
    steps:
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}

  write_cache:
    steps:
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}

jobs:
  build:
    executor: builder
    steps:
      - checkout
      - read_cache

      - run:
          name: Build and test
          command: ./gradlew check

      - write_cache

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - run:
          name: Deploy locally
          command: ./gradlew publishToMavenLocal

  release:
    executor: builder
    steps:
      - checkout
      - read_cache
      - run:
          name: Publish release
          command: "./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository --stacktrace"

workflows:
  version: 2.1
  build:
    jobs:
      - build
      - release:
          context: OSS
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
